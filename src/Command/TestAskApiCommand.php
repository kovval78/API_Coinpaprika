<?php

namespace App\Command;

use Symfony\Component\Console\Command\Command;
//use App\HttpClient\SymfonyHttp;
use Symfony\Component\HttpClient\HttpClient;
use Symfony\Component\HttpClient\CurlHttpClient;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Question\Question;
//use App\MyClasses\LinkCreator;

class TestAskApiCommand extends Command
{
    protected function configure()
    {
        $this->setName('ask:scoin')
            ->setDescription('The command asks for the first and second currency')
            ->setHelp('This command allows you to enter the currency pair');
//                ->addArgument('firstcoin',  InputArgument::REQUIRED, 'Enter the first currency: ')
//                ->addArgument('secondcoin', InputArgument::REQUIRED, 'Enter the second currency: ');

        parent::configure(); // TODO: Change the autogenerated stub

    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $helper = $this->getHelper('question');

        $curr1 = $helper->ask($input, $output, new Question(
            "Enter your currency : ", "BTC"
        ));
        $curr2 = $helper->ask($input, $output, new Question(
            "Enter your second currency : ", "USD"
        ));
        $amount = $helper->ask($input, $output, new Question(
            "Please enter the amount of currency to be exchanged : ", 1
        ));


        $httpClient = HttpClient::create();
        $response = $httpClient->request('GET',
            'https://api.coinpaprika.com/v1/'
        );

        $baseUrl = 'https://api.coinpaprika.com/v1/';
        $price1 = $baseUrl . $curr1;
        var_dump($price1);


//        $response = $httpClient->getResponse($link);



//        $response = $client->request(
//            'GET',
//            'https://api.coinpaprika.com/v1/'
//        );

//        $response = $httpClient->getResponse

//        $ret = new ResponseParser($response)

        $message = sprintf("Your currencies are %s/%s%s", $curr1, $curr2, $amount);

        $output->writeln($message);

        return Command::SUCCESS;
//            parent::execute($input, $output); // TODO: Change the autogenerated stub
    }
}
